# Development Dockerfile with full dependencies
FROM python:3.11-slim

# Install system dependencies including Docker CLI
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    gnupg \
    lsb-release \
    tzdata \
    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y docker-ce-cli \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies (development)
COPY requirements-dev.txt .
RUN pip install --no-cache-dir -r requirements-dev.txt

# Create non-root user and add to docker group
RUN useradd --create-home --shell /bin/bash --uid 1000 pkms \
    && groupadd -g 999 docker \
    && usermod -aG docker pkms

# Create data directory and set permissions
RUN mkdir -p /app/data && chown -R pkms:pkms /app/data

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=pkms:pkms . .

# Set timezone to Asia/Kathmandu
RUN ln -snf /usr/share/zoneinfo/Asia/Kathmandu /etc/localtime \
    && echo "Asia/Kathmandu" > /etc/timezone

# Switch to non-root user
USER pkms

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Set default command with hot reload
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"] 